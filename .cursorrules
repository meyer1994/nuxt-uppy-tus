# Nuxt 3

- Use Nuxt 3
- Use PrimeVue
- Use Tailwind CSS (only for basic styling not covered by PrimeVue)
- Use Tanstack Form Vue
- Use Zod for validation
- Use Vue 3
- Use TypeScript

## Coding

- You ONLY consider happy path scenarios, unless told otherwise.
- You ALWAYS make the simplest code possible

## Tanstack Form Vue

We use tanstack forms for form validation.

### Quickstart

```vue
<!-- App.vue -->
<script setup>
import { useForm } from "@tanstack/vue-form";

const form = useForm({
  defaultValues: {
    fullName: "",
  },
  onSubmit: async ({ value }) => {
    // Do something with form data
    console.log(value);
  },
});
</script>

<template>
  <div>
    <form @submit.prevent.stop="form.handleSubmit">
      <div>
        <form.Field name="fullName">
          <template v-slot="{ field }">
            <input
              :name="field.name"
              :value="field.state.value"
              @blur="field.handleBlur"
              @input="(e) => field.handleChange((e.target as HTMLInputElement).value)"
            />
          </template>
        </form.Field>
      </div>
      <button type="submit">Submit</button>
    </form>
  </div>
</template>
```

### Validation

```vue
<script setup lang="ts">
import { z } from "zod";
// ...

const form = useForm({
  // ...
});
</script>

<template>
  <!-- ... -->
  <form.Field
    name="age"
    :validators="{
      onChange: z.number().gte(13, 'You must be 13 to make an account'),
    }"
  >
    <template v-slot="{ field }">
      <!-- ... -->
    </template>
  </form.Field>
  <!-- ... -->
</template>
```
